name: Run CodeCarbon Emissions Tracker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  track-emissions:
    runs-on: ubuntu-latest

    env:
      NUM_EPISODES: 1000

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: myenv
        environment-file: environment.yml
        auto-activate-base: false

    - name: Install CodeCarbon
      shell: bash -l {0}
      run: |
        pip install codecarbon

    - name: Create wrapper to run main.py with CodeCarbon
      shell: bash -l {0}
      run: |
        echo "from codecarbon import EmissionsTracker" > run_with_emissions.py
        echo "tracker = EmissionsTracker()" >> run_with_emissions.py
        echo "tracker.start()" >> run_with_emissions.py
        echo "exec(open('main.py').read())" >> run_with_emissions.py
        echo "tracker.stop()" >> run_with_emissions.py

    - name: Run main.py with CodeCarbon tracker
      shell: bash -l {0}
      run: |
        python run_with_emissions.py --output-file emissions.csv > codecarbon.log 2>&1

    - name: Upload emissions output
      uses: actions/upload-artifact@v4
      with:
        name: codecarbon-emissions
        path: emissions.csv

    # —— New steps for automated PR feedback ——
    - name: Write comment body to file
      run: |
        pip install pandas
        python - << 'EOF'
        import pandas as pd
        df = pd.read_csv("emissions.csv")
        s = df.iloc[-1]
        with open("emissions.md", "w") as f:
            f.write(f"""**Carbon Emissions Report**
              - CO₂ emitted: {s.emissions:.4f} kg
              - Energy consumed: {s.energy_consumed:.4f} kWh
              - Country: {s.country_iso_code}
            """)
        EOF

    - name: Append warnings to emissions comment
      run: |
        python - << 'EOF'
        with open("codecarbon.log") as f:
            log = f.read()
        warnings = []
        if "No CPU tracking mode found" in log:
            warnings.append("- CPU energy was estimated using a constant model.")
        if "Cloud provider 'azure' do not publish electricity carbon intensity" in log:
            warnings.append("- Azure carbon intensity is unavailable; country average was used.")
        with open("emissions.md", "a") as f:
            if warnings:
                f.write("\n**⚠️ Notes:**\n")
                f.write("\n".join(warnings))
        EOF

    - name: Comment emissions on PR
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: emissions.md
