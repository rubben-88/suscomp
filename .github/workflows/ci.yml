name: Run CodeCarbon Emissions Tracker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  track-emissions:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: myenv
        environment-file: environment.yml
        auto-activate-base: false

    - name: Install CodeCarbon
      shell: bash -l {0}
      run: |
        pip install codecarbon

    - name: Create wrapper to run main.py with CodeCarbon
      shell: bash -l {0}
      run: |
        echo "from codecarbon import EmissionsTracker" > run_with_emissions.py
        echo "tracker = EmissionsTracker()" >> run_with_emissions.py
        echo "tracker.start()" >> run_with_emissions.py
        echo "exec(open('main.py').read())" >> run_with_emissions.py
        echo "tracker.stop()" >> run_with_emissions.py

    - name: Run main.py with CodeCarbon tracker
      shell: bash -l {0}
      run: |
        python run_with_emissions.py --output-file emissions.csv

    - name: Upload emissions output
      uses: actions/upload-artifact@v4
      with:
        name: codecarbon-emissions
        path: emissions.csv

    # —— New steps for automated PR feedback ——
    - name: Parse emissions and prepare comment
      id: emissions-summary
      shell: bash -l {0}
      run: |
        pip install pandas
        python - << 'EOF'
        import pandas as pd, json, sys
        # Read the last row of the CSV
        df = pd.read_csv("emissions.csv")
        summary = df.iloc[-1].to_dict()
        # Build markdown body
        body = (
            f"**Carbon Emissions Report**  \n"
            f"- CO₂ emitted: {summary['emissions']:.4f} kg  \n"
            f"- Energy consumed: {summary['energy_consumed']:.4f} kWh  \n"
            f"- Country: {summary['country_iso_code']}"
        )
        # Output for use in next action
        print(f"::set-output name=body::{body}")
        EOF

    - name: Comment emissions on PR
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ steps.emissions-summary.outputs.body }}
