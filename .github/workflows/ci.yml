name: Run CodeCarbon Emissions Tracker

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  # EXECUTE
  execute:
    runs-on: ubuntu-latest

    env:
      NUM_EPISODES: 1000

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: myenv
        environment-file: environment.yml
        auto-activate-base: false

    - name: Install CodeCarbon
      shell: bash -l {0}
      run: |
        pip install codecarbon

    - name: Create wrapper to run main.py with CodeCarbon
      shell: bash -l {0}
      run: |
        echo "from codecarbon import EmissionsTracker" > run_with_emissions.py
        echo "tracker = EmissionsTracker()" >> run_with_emissions.py
        echo "tracker.start()" >> run_with_emissions.py
        echo "exec(open('main.py').read())" >> run_with_emissions.py
        echo "tracker.stop()" >> run_with_emissions.py

    # create emissions.csv && codecarbon.log
    - name: Run main.py with CodeCarbon tracker
      shell: bash -l {0}
      run: |
        python run_with_emissions.py --output-file emissions.csv > codecarbon.log 2>&1

    # export emmisions.csv as artifact
    - name: Upload emissions output
      uses: actions/upload-artifact@v4
      with:
        name: emissions
        path: emissions.csv

    # export codecarbon.log as artifact
    - name: Upload emissions output
      uses: actions/upload-artifact@v4
      with:
        name: codecarbon
        path: codecarbon.log

  # COMMENT
  comment:
    needs: execute
    if: github.event_name == 'pull_request'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # import emmisions.csv as artifact
    - name: Download the emissions artifact
      uses: actions/download-artifact@v4
      with:
        name: emissions
        path: .

    # import codecarbon.log as artifact
    - name: Download the emissions artifact
      uses: actions/download-artifact@v4
      with:
        name: codecarbon
        path: .

    # read emissions.csv to create emission.md
    - name: Write comment body to file
      run: |
        pip install pandas
        python - << 'EOF'
        import pandas as pd
        df = pd.read_csv("emissions.csv")
        s = df.iloc[-1]
        with open("emissions.md", "w") as f:
            f.write(f"""**Carbon Emissions Report:**
              - CO₂ emitted: {s.emissions:.4f} kg
              - Energy consumed: {s.energy_consumed:.4f} kWh
              - Country: {s.country_iso_code}
            """)
        EOF

    # read codecarbon.log to create add to emissions.md
    - name: Append all warnings to emissions comment
      run: |
        if grep -q "WARNING" codecarbon.log; then
          echo -e "\n**⚠️ Notes:**" >> emissions.md
          # Strip leading timestamp/brackets and prefix each warning with “- ”
          grep -E "WARNING" codecarbon.log | sed -E 's/^\[[^]]+\] */- /' >> emissions.md
        fi

    # push the emissions.md to the PR as comment
    - name: Comment emissions on PR
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: emissions.md

  # UPDATE GRAPH
  #update-trend-graph:
  #  if: github.event_name == 'push'
  #  runs-on: ubuntu-latest
  #  needs: execute-and-comment
#
  #  steps:
  #    - name: Checkout main
  #      uses: actions/checkout@v3
  #      with:
  #        fetch-depth: 0 # whole history
#
  #    - name: Set up Python
  #      uses: actions/setup-python@v4
  #      with:
  #        python-version: '3.x'
#
  #    - name: Install plotting deps
  #      run: pip install pandas matplotlib
#
  #    - name: Fetch last emissions artifact (first-time safe)
  #      uses: actions/download-artifact@v4
  #      with:
  #        name: codecarbon-emissions
  #        path: .
