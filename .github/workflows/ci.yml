name: Run CodeCarbon Emissions Tracker

on:
  #pull_request:
  #  branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  # EXECUTE
  execute:
    if: github.actor != 'github-actions[bot]'

    runs-on: ubuntu-latest

    env:
      NUM_EPISODES: 1000

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: myenv
        environment-file: environment.yml
        auto-activate-base: false

    - name: Install CodeCarbon
      shell: bash -l {0}
      run: |
        pip install codecarbon

    - name: Create wrapper to run main.py with CodeCarbon
      shell: bash -l {0}
      run: |
        echo "from codecarbon import EmissionsTracker" > run_with_emissions.py
        echo "tracker = EmissionsTracker()" >> run_with_emissions.py
        echo "tracker.start()" >> run_with_emissions.py
        echo "exec(open('main.py').read())" >> run_with_emissions.py
        echo "tracker.stop()" >> run_with_emissions.py

    # create emissions.csv && codecarbon.log
    - name: Run main.py with CodeCarbon tracker
      shell: bash -l {0}
      run: |
        python run_with_emissions.py --output-file emissions.csv > codecarbon.log 2>&1

    # export emmisions.csv as artifact
    - name: Upload emissions output
      uses: actions/upload-artifact@v4
      with:
        name: emissions
        path: emissions.csv

    # export codecarbon.log as artifact
    - name: Upload emissions output
      uses: actions/upload-artifact@v4
      with:
        name: codecarbon
        path: codecarbon.log

  # COMMENT
  comment:
    needs: execute
    if: github.event_name == 'pull_request'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # import emmisions.csv as artifact
    - name: Download the emissions artifact
      uses: actions/download-artifact@v4
      with:
        name: emissions
        path: .

    # import codecarbon.log as artifact
    - name: Download the emissions artifact
      uses: actions/download-artifact@v4
      with:
        name: codecarbon
        path: .

    # read emissions.csv to create emission.md
    - name: Write comment body to file
      run: |
        pip install pandas
        python - << 'EOF'
        import pandas as pd
        df = pd.read_csv("emissions.csv")
        s = df.iloc[-1]
        with open("emissions.md", "w") as f:
            f.write(f"""**Carbon Emissions Report:**
              - CO₂ emitted: {s.emissions:.4f} kg
              - Energy consumed: {s.energy_consumed:.4f} kWh
              - Country: {s.country_iso_code}
            """)
        EOF

    # read codecarbon.log to create add to emissions.md
    - name: Append all warnings to emissions comment
      run: |
        if grep -q "WARNING" codecarbon.log; then
          echo -e "\n**⚠️ Notes:**" >> emissions.md
          # Strip leading timestamp/brackets and prefix each warning with “- ”
          grep -E "WARNING" codecarbon.log | sed -E 's/^\[[^]]+\] */- /' >> emissions.md
        fi

    # push the emissions.md to the PR as comment
    - name: Comment emissions on PR
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: emissions.md

  # UPDATE GRAPH
  graph:
    needs: execute
    if: github.event_name == 'push'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 

    #- name: Restore emissions history cache
    #  uses: actions/cache@v3
    #  with:
    #    path: emissions_history.csv
    #    key: ${{ runner.os }}-emissions-history
    #    restore-keys: |
    #      ${{ runner.os }}-emissions-history

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install plotting deps
      run: pip install pandas matplotlib

    # import emmisions.csv as artifact
    - name: Download the emissions artifact
      uses: actions/download-artifact@v4
      with:
        name: emissions
        path: .

    - name: Initialize history CSV if missing
      run: |
        if [ ! -f emissions_history.csv ]; then
          echo "timestamp,emissions_kg,energy_kwh" > emissions_history.csv
        fi

    - name: Append latest run to history
      run: |
        python - << 'EOF'
        import pandas as pd
        from datetime import datetime

        # load new emission
        new = pd.read_csv("emissions.csv").iloc[-1]
        row = {
          "timestamp": datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ"),
          "emissions_kg": new.emissions,
          "energy_kwh": new.energy_consumed
        }
        pd.DataFrame([row]).to_csv("emissions_history.csv", mode="a", header=False, index=False)
        EOF

    - name: Generate trend plot
      run: |
        python - << 'EOF'
        import pandas as pd, matplotlib.pyplot as plt

        hist = pd.read_csv("emissions_history.csv", parse_dates=["timestamp"])
        plt.plot(hist.timestamp, hist.emissions_kg)
        plt.xlabel("Date")
        plt.ylabel("CO₂ emissions (kg)")
        plt.tight_layout()
        plt.savefig("emissions_trend.png")
        EOF

    - name: Ensure README exists and embed graph
      run: |
        # If README.md does not exist, create it with the tag block
        if [ ! -f README.md ]; then
          echo "## Carbon Emissions Over Time" > README.md
          echo ""                  >> README.md
          echo "<!-- EMISSIONS_GRAPH -->" >> README.md
          echo "<!-- END_EMISSIONS_GRAPH -->" >> README.md
        fi

        # If tag block is missing, append it to the end
        if ! grep -q '<!-- EMISSIONS_GRAPH -->' README.md || ! grep -q '<!-- END_EMISSIONS_GRAPH -->' README.md; then
          echo '' >> README.md
          echo '<!-- EMISSIONS_GRAPH -->' >> README.md
          echo '<!-- END_EMISSIONS_GRAPH -->' >> README.md
        fi

        # Replace content between the markers
        awk '
          BEGIN {in_block=0}
          /<!-- EMISSIONS_GRAPH -->/ {print; print "![Emissions Over Time](emissions_trend.png)"; in_block=1; next}
          /<!-- END_EMISSIONS_GRAPH -->/ {in_block=0}
          !in_block
        ' README.md > temp.md && mv temp.md README.md

    - name: Commit changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add emissions_history.csv emissions_trend.png README.md

    - name: Create Pull Request for trend update
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        base: main
        branch: chore/update-emissions-trend
        title: update emissions trend graph
        body: |
          This PR was automatically generated by CI to update the emissions trend graph.
        commit-message: update emissions trend graph
        labels: automated
        draft: false
        signoff: true

    - name: Enable auto-merge
      if: steps.create_pr.outputs.pull-request-number != ''
      uses: peter-evans/enable-pull-request-automerge@v2
      with:
        pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
        repository: ${{ github.repository }}
        merge-method: squash      # or "merge" / "rebase"
        github-token: ${{ secrets.GITHUB_TOKEN }}
